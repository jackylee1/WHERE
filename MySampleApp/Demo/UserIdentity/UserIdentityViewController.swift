//
//  UserIdentityViewController.swift
//  MySampleApp
//
//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.12
//

import Foundation
import UIKit
import AWSMobileHubHelper
import AWSSQS

class UserIdentityViewController: UIViewController {
    
    @IBOutlet weak var userImageView: UIImageView!
    @IBOutlet weak var userName: UILabel!
    @IBOutlet weak var userID: UILabel!
    
    // MARK: - View lifecycle
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)

        let identityManager = AWSIdentityManager.default()
        
        if let identityUserName = identityManager.userName {
            userName.text = identityUserName
        } else {
            userName.text = NSLocalizedString("Guest User", comment: "Placeholder text for the guest user.")
        }
        
        userID.text = identityManager.identityId
        if let imageURL = identityManager.imageURL {
            let imageData = try! Data(contentsOf: imageURL)
            if let profileImage = UIImage(data: imageData) {
                userImageView.image = profileImage
            } else {
                userImageView.image = UIImage(named: "UserIcon")
            }
        }
        let credentialProvider = AWSCognitoCredentialsProvider(regionType: .USEast1, identityPoolId: "us-east-1_XzzWDbghE")
        let configuration = AWSServiceConfiguration(region: .USEast1, credentialsProvider: credentialProvider)
        AWSServiceManager.default().defaultServiceConfiguration = configuration
        
        let mysqs = AWSSQS.default()
//        let sendMsgReq = AWSSQSSendMessageRequest()
//        sendMsgReq?.queueUrl = "https://sqs.us-east-1.amazonaws.com/809883211533/demosqs"
//        sendMsgReq?.messageBody = "hello world!"
//        mysqs.sendMessage(sendMsgReq!)
        let getMsgReq = AWSSQSReceiveMessageRequest()
        getMsgReq?.waitTimeSeconds = 5
        getMsgReq?.maxNumberOfMessages = 5
        getMsgReq?.queueUrl = "https://sqs.us-east-1.amazonaws.com/879159440576/recv_que"
        mysqs.receiveMessage(getMsgReq!).continueWith{ (task) -> AnyObject! in
            if let data = task.result?.messages {
                for dd in data {
                    print(dd.body ?? "")
                }
            }
            return nil
        }
    }
}
